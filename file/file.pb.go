// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file.proto

package file

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileMessage struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Buf                  []byte   `protobuf:"bytes,2,opt,name=buf,proto3" json:"buf,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Block                int64    `protobuf:"varint,4,opt,name=block,proto3" json:"block,omitempty"`
	Type                 int64    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileMessage) Reset()         { *m = FileMessage{} }
func (m *FileMessage) String() string { return proto.CompactTextString(m) }
func (*FileMessage) ProtoMessage()    {}
func (*FileMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9188e3b7e55e1162, []int{0}
}

func (m *FileMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileMessage.Unmarshal(m, b)
}
func (m *FileMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileMessage.Marshal(b, m, deterministic)
}
func (m *FileMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMessage.Merge(m, src)
}
func (m *FileMessage) XXX_Size() int {
	return xxx_messageInfo_FileMessage.Size(m)
}
func (m *FileMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FileMessage proto.InternalMessageInfo

func (m *FileMessage) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *FileMessage) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

func (m *FileMessage) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileMessage) GetBlock() int64 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *FileMessage) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type FileReq struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileReq) Reset()         { *m = FileReq{} }
func (m *FileReq) String() string { return proto.CompactTextString(m) }
func (*FileReq) ProtoMessage()    {}
func (*FileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9188e3b7e55e1162, []int{1}
}

func (m *FileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileReq.Unmarshal(m, b)
}
func (m *FileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileReq.Marshal(b, m, deterministic)
}
func (m *FileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileReq.Merge(m, src)
}
func (m *FileReq) XXX_Size() int {
	return xxx_messageInfo_FileReq.Size(m)
}
func (m *FileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FileReq.DiscardUnknown(m)
}

var xxx_messageInfo_FileReq proto.InternalMessageInfo

func (m *FileReq) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func init() {
	proto.RegisterType((*FileMessage)(nil), "file.FileMessage")
	proto.RegisterType((*FileReq)(nil), "file.FileReq")
}

func init() { proto.RegisterFile("file.proto", fileDescriptor_9188e3b7e55e1162) }

var fileDescriptor_9188e3b7e55e1162 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcb, 0xcc, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xaa, 0xb9, 0xb8, 0xdd, 0x32,
	0x73, 0x52, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x33, 0xf3, 0x52,
	0x52, 0x2b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x20, 0x1c, 0x21, 0x01, 0x2e, 0xe6, 0xa4,
	0xd2, 0x34, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x10, 0x53, 0x48, 0x8a, 0x8b, 0x03, 0xa4,
	0x3d, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x33, 0x08, 0xce, 0x07, 0x99, 0x91,
	0x94, 0x93, 0x9f, 0x9c, 0x2d, 0xc1, 0x02, 0x31, 0x03, 0xcc, 0x11, 0x12, 0xe2, 0x62, 0x29, 0xa9,
	0x2c, 0x48, 0x95, 0x60, 0x05, 0x0b, 0x82, 0xd9, 0x4a, 0xf2, 0x5c, 0xec, 0x20, 0xcb, 0x83, 0x52,
	0x0b, 0xb1, 0x5b, 0x6c, 0x64, 0x0f, 0x51, 0x10, 0x5c, 0x54, 0x26, 0x64, 0xc2, 0xc5, 0xe7, 0x9e,
	0x5a, 0xe2, 0x92, 0x58, 0x92, 0xe8, 0x54, 0xe9, 0x09, 0x76, 0x15, 0xaf, 0x1e, 0xd8, 0x37, 0x50,
	0x13, 0xa4, 0x04, 0x11, 0x5c, 0xa8, 0x6f, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x7e, 0x35, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xc8, 0x21, 0x47, 0x1e, 0xf9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileSrvClient is the client API for FileSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileSrvClient interface {
	GetDataByIndex(ctx context.Context, in *FileReq, opts ...grpc.CallOption) (*FileMessage, error)
}

type fileSrvClient struct {
	cc *grpc.ClientConn
}

func NewFileSrvClient(cc *grpc.ClientConn) FileSrvClient {
	return &fileSrvClient{cc}
}

func (c *fileSrvClient) GetDataByIndex(ctx context.Context, in *FileReq, opts ...grpc.CallOption) (*FileMessage, error) {
	out := new(FileMessage)
	err := c.cc.Invoke(ctx, "/file.FileSrv/GetDataByIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSrvServer is the server API for FileSrv service.
type FileSrvServer interface {
	GetDataByIndex(context.Context, *FileReq) (*FileMessage, error)
}

// UnimplementedFileSrvServer can be embedded to have forward compatible implementations.
type UnimplementedFileSrvServer struct {
}

func (*UnimplementedFileSrvServer) GetDataByIndex(ctx context.Context, req *FileReq) (*FileMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataByIndex not implemented")
}

func RegisterFileSrvServer(s *grpc.Server, srv FileSrvServer) {
	s.RegisterService(&_FileSrv_serviceDesc, srv)
}

func _FileSrv_GetDataByIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSrvServer).GetDataByIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file.FileSrv/GetDataByIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSrvServer).GetDataByIndex(ctx, req.(*FileReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "file.FileSrv",
	HandlerType: (*FileSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDataByIndex",
			Handler:    _FileSrv_GetDataByIndex_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}
